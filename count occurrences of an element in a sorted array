#include <iostream>
using namespace std;
int lowerbound(int a[],int n,int key){
    int l=0,h=n-1,mid,ans=-1;
     while(l<=h){
      mid=(l+h)/2;
      if(a[mid]>=key)
      {
          ans=mid;
          h=mid-1;
      }
      else
      l=mid+1;
  }
  return ans;
}
int upperbound(int a[],int n,int key){
    int l=0,h=n-1,mid,ans=-1;
     while(l<=h){
      mid=(l+h)/2;
      if(a[mid]>key)
      {
          ans=mid;
          h=mid-1;
      }
      else
      l=mid+1;
  }
  if(ans==-1)
  ans=n-1;
  return ans;
}

int main() {
   int n,key,f,l=-1;
   cin>>n>>key;
   int a[n],i;
   for(i=0;i<n;i++){
       cin>>a[i];
   }
   f=lowerbound(a,n,key);
l=upperbound(a,n,key);
   cout<<f<<" "<<l<<"\n";
   cout<<"count: "<<l-f+1;
 
    return 0;
}
output
6 3
1 2 2 3 3 4
3 5
count: 3
